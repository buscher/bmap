
const LeafIcon = L.Icon.extend({
    options: {
        shadowUrl: 'images/marker-shadow.png',
        iconSize:     [25, 41],
        shadowSize:   [41, 41],
        iconAnchor:   [12, 41],
        shadowAnchor: [12, 41],
        popupAnchor:  [0, -41]
    }
});
const blueIcon = new LeafIcon({iconUrl: 'images/marker-icon-blue.png'});
const blueGreyIcon = new LeafIcon({iconUrl: 'images/marker-icon-blue-grey.png'});
const greenIcon = new LeafIcon({iconUrl: 'images/marker-icon-green.png'});
const redIcon = new LeafIcon({iconUrl: 'images/marker-icon-red.png'});
const blackIcon = new LeafIcon({iconUrl: 'images/marker-icon-black.png'});
const turIcon = new LeafIcon({iconUrl: 'images/marker-icon-tur.png'});

hwnArr = []
for (i = 0; i < hwn_old.length; i++) {
    hwnArr.push(L.marker([hwn_old[i].lat, hwn_old[i].lng], {icon: blueGreyIcon}).bindPopup(hwn_old[i].title));
}
for (i = 0; i < hwn.length; i++) {
    hwnArr.push(L.marker([hwn[i].lat, hwn[i].lng], {icon: blueIcon}).bindPopup(hwn[i].title));
}
var hwnGroup = L.layerGroup(hwnArr);

bnsArr = []
for (i = 0; i < bns.length; i++) {
    bnsArr[i] = L.marker([bns[i].lat, bns[i].lng], {icon: greenIcon}).bindPopup(bns[i].title);
}
var bnsGroup = L.layerGroup(bnsArr);

knsArr = []
for (i = 0; i < kns.length; i++) {
    knsArr[i] = L.marker([kns[i].lat, kns[i].lng], {icon: redIcon}).bindPopup(kns[i].title);
}
var knsGroup = L.layerGroup(knsArr);

touringenArr = []
for (i = 0; i < touringen.length; i++) {
    touringenArr[i] = L.marker([touringen[i].lat, touringen[i].lng], {icon: turIcon}).bindPopup(touringen[i].title);
}
var touringenGroup = L.layerGroup(touringenArr);

map.addLayer(walkGroup)
map.addLayer(hwn1Group)

var overlayMaps = {
    "Walking": walkGroup,
    "HWN 1": hwn1Group,
    "Running": runGroup,
    "Cycling": cycleGroup,
    "HWN": hwnGroup,
    "Burgen und Schloesser": bnsGroup,
    "Kloster": knsGroup,
    "Touringen": touringenGroup,
};

var layerControl = L.control.layers(null, overlayMaps).addTo(map);

locationMarker = undefined

function onLocationFound(e) {
    if (locationMarker == undefined) {
        locationMarker = L.marker(e.latlng, {icon: blackIcon}).addTo(map);
    }

    locationMarker.setLatLng(e.latlng);
}

function onLocationError(e) {
    alert(e.message);
}

map.on('locationfound', onLocationFound);
map.on('locationerror', onLocationError);

function locateClick() {
    map.locate({setView: true, maxZoom: 16});
}

myA = document.createElement("a");
myA.className = "leaflet-control-zoom-out"
myA.href = "#"
myA.role = "button"

mySpan = document.createElement("span");
mySpan.innerHTML = "&target;";
mySpan.onclick = locateClick;

myA.appendChild(mySpan)
document.querySelector("#map > div.leaflet-control-container > div.leaflet-top.leaflet-left > div").appendChild(myA)

</script>

</body>
</html>
